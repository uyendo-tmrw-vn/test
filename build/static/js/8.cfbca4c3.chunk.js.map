{"version":3,"sources":["assets/img/nav-logo.png","components/header/index.tsx"],"names":["useStyles","makeStyles","list","width","Header","isShowingContractBar","useSelector","state","counter","listMenuItem","useMediaQuery","query","name","url","openInNewTab","hasBg","React","useState","top","left","bottom","right","setState","toggleDrawer","anchor","open","event","type","key","show","setShow","isInPageContent","setIsInPageContent","scrollPos","controlNavbar","window","scrollY","document","body","getBoundingClientRect","useEffect","addEventListener","removeEventListener","className","src","LogoImg","alt","map","e","i","href","target","rel","style","color","onClick","MenuOutlined"],"mappings":"oKAAe,MAA0B,qC,uDCkBnCA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,OA+MIC,UA3MU,WACvB,IAAMC,EAAuBC,aAC3B,SAACC,GAAD,OAAWA,EAAMC,QAAQH,oBAAzB,IAOII,GAJYC,wBAAc,CAC9BC,MAAO,uBAGY,CACnB,CACEC,KAAM,WACNC,IAAK,IACLC,cAAc,GAEhB,CACEF,KAAM,cACNC,IAAK,6BACLC,cAAc,GAEhB,CACEF,KAAM,SACNC,IAAK,IACLC,cAAc,GAEhB,CACEF,KAAM,OACNC,IAAK,8BACLC,cAAc,GAEhB,CACEF,KAAM,MACNC,IAAK,6BACLC,cAAc,GAEhB,CACEF,KAAM,aACNC,IAAK,uFACLC,cAAc,GAEhB,CACEF,KAAM,WACNC,IAAK,8BACLC,cAAc,EACdC,OAAO,KAKX,GADgBf,IACUgB,IAAMC,SAAS,CACvCC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,KAJT,mBAAOd,EAAP,KAAce,EAAd,KAOMC,EAAe,SAACC,EAAQC,GAAT,OAAkB,SAACC,KAEpCA,GACe,YAAfA,EAAMC,MACS,QAAdD,EAAME,KAA+B,UAAdF,EAAME,MAKhCN,EAAS,2BAAKf,GAAN,kBAAciB,EAASC,IAChC,CAVoB,EAqDrB,EAAwBR,oBAAS,GAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACA,EAA8Cb,oBAAS,GAAvD,mBAAOc,EAAP,KAAwBC,EAAxB,KAEIC,EAAY,EACVC,EAAgB,WAMhBC,OAAOC,QAAU,IACfC,SAASC,KAAKC,wBAAwBrB,IAAMe,EAC9CH,GAAQ,GAERA,GAAQ,GAEVE,GAAmB,KAEnBF,GAAQ,GACRE,GAAmB,IAGrBC,EAAYI,SAASC,KAAKC,wBAAwBrB,GACnD,EAaD,OAZAsB,qBAAU,WAER,OADAL,OAAOM,iBAAiB,SAAUP,GAC3B,WACLC,OAAOO,oBAAoB,SAAUR,EACtC,CACF,GAAE,IAQD,sBACES,UAAS,8CAA0Cd,EAAiD,cAA1C,wCAAjD,YACHxB,IAAyB0B,EACzB,uBACA,6BAEN,yBANF,UAQE,qBAAKY,UAAU,uDAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,8BACE,qBAAKA,UAAU,OAAOC,IAAKC,EAASC,IAAI,qBAE1C,qBAAKH,UAAU,SAAf,SACGlC,EAAasC,KAAI,SAACC,EAAGC,GAAJ,OAChB,qBAAKN,UAAU,QAAf,UACsB,IAAnBK,EAAElC,aACD,mBAAGoC,KAAMF,EAAEnC,IAAX,SAAiBmC,EAAEpC,OAEnB,oBAAGsC,KAAMF,EAAEnC,IAAKsC,OAAO,SAASC,IAAI,aAAaT,UAAS,UAAgB,GAAXK,EAAEjC,OAAiB,UAAlF,UACE,+BAAOiC,EAAEpC,OACG,GAAXoC,EAAEjC,OAAiB,qBAAK6B,IAAI,8CANPI,EAAEpC,KADd,WAexB,qBAAK+B,UAAU,uDAAf,SACE,sBAAKA,UAAU,oDAAf,UACE,8BACE,qBAAKA,UAAU,OAAOC,IAAKC,EAASC,IAAI,qBAE1C,qBAAKH,UAAU,SAAf,SACE,qBAAKA,UAAU,QAAf,SACE,qBACEU,MAAO,CAAEC,MAAO,QAChBC,QAAShC,EAAa,SAAS,GAFjC,SAIE,cAACiC,EAAA,EAAD,iBAgBf,C","file":"static/js/8.cfbca4c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/nav-logo.d4db6828.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { MenuOutlined } from \"@ant-design/icons\";\r\nimport LogoImg from \"assets/img/nav-logo.png\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setShowingContractBar } from \"redux/slices/counter\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n});\r\n\r\nconst Header: React.FC = () => {\r\n  const isShowingContractBar = useSelector(\r\n    (state) => state.counter.isShowingContractBar\r\n  );\r\n\r\n  const isDesktop = useMediaQuery({\r\n    query: \"(min-width: 768px)\",\r\n  });\r\n\r\n  const listMenuItem = [\r\n    {\r\n      name: \"Homepage\",\r\n      url: \"#\",\r\n      openInNewTab: false,\r\n    },\r\n    {\r\n      name: \"Marketplace\",\r\n      url: \"https://nft.heroarena.app/\",\r\n      openInNewTab: true,\r\n    },\r\n    {\r\n      name: \"Battle\",\r\n      url: \"#\",\r\n      openInNewTab: false,\r\n    },\r\n    {\r\n      name: \"Blog\",\r\n      url: \"https://blog.heroarena.app/\",\r\n      openInNewTab: true,\r\n    },\r\n    {\r\n      name: \"INO\",\r\n      url: \"https://ino.heroarena.app/\",\r\n      openInNewTab: true,\r\n    },\r\n    {\r\n      name: \"Whitepaper\",\r\n      url: \"https://docs.google.com/presentation/d/1EweZe2R8f53Ziw81JJgmubvjQr18-4NijYkPZ1sw4jw/\",\r\n      openInNewTab: true,\r\n    },\r\n    {\r\n      name: \"Play Now\",\r\n      url: \"https://play.heroarena.app/\",\r\n      openInNewTab: true,\r\n      hasBg: true\r\n    },\r\n  ];\r\n\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {listMenuItem.map((e, i) => (\r\n          <ListItem button key={e.name}>\r\n            {e.openInNewTab === false ? (\r\n              <a href={e.url} style={{ color: \"#000\" }} className={`${e.hasBg == true && 'has-bg'}`}>\r\n                <span><ListItemText primary={e.name} /></span>\r\n                {e.hasBg == true && <img src=\"/assets/img/buttons/button-yellow.png\" />}\r\n              </a>\r\n            ) : (\r\n              <a\r\n                href={e.url}\r\n                style={{ color: \"#000\" }}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer ddd\"\r\n                className={`${e.hasBg == true && 'has-bg'}`}\r\n              >\r\n                <span><ListItemText primary={e.name} /></span>\r\n                {e.hasBg == true && <img src=\"/assets/img/buttons/button-yellow.png\" />}\r\n              </a>\r\n            )}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      {/* <Divider />\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List> */}\r\n    </div>\r\n  );\r\n\r\n  const [show, setShow] = useState(true);\r\n  const [isInPageContent, setIsInPageContent] = useState(false);\r\n\r\n  var scrollPos = 0;\r\n  const controlNavbar = () => {\r\n    // if (window.scrollY > 100) {\r\n    //   setShow(false);\r\n    // } else {\r\n    //   setShow(true);\r\n    // }\r\n    if (window.scrollY > 10) {\r\n      if (document.body.getBoundingClientRect().top > scrollPos) {\r\n        setShow(true);\r\n      } else {\r\n        setShow(false);\r\n      }\r\n      setIsInPageContent(true);\r\n    } else {\r\n      setShow(true);\r\n      setIsInPageContent(false);\r\n    }\r\n\r\n    scrollPos = document.body.getBoundingClientRect().top;\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", controlNavbar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", controlNavbar);\r\n    };\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   window.onbeforeunload = function () {\r\n  //     dispatch(setShowingContractBar(true));\r\n  //     window.scrollTo(0, 0);\r\n  //   };\r\n  // }, []);\r\n  return (\r\n    <div\r\n      className={`col-12 p-0 py-md-2 p-md-2 ha-header ${!show ? \"hide-header contract-bar-padding-none\" : \"show-header\"\r\n        } ${isShowingContractBar && !isInPageContent\r\n          ? \"contract-bar-padding\"\r\n          : \"contract-bar-padding-none\"\r\n        }`}\r\n      data-scroll-section\r\n    >\r\n      <div className=\"container ha-header-content shadow d-md-block d-none\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <img className=\"logo\" src={LogoImg} alt=\"HeroArena Logo\" />\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            {listMenuItem.map((e, i) => (\r\n              <div className=\"items\" key={e.name}>\r\n                {e.openInNewTab === false ? (\r\n                  <a href={e.url}>{e.name}</a>\r\n                ) : (\r\n                  <a href={e.url} target=\"_blank\" rel=\"noreferrer\" className={`${e.hasBg == true && 'has-bg'}`}>\r\n                    <span>{e.name}</span>\r\n                    {e.hasBg == true && <img src=\"/assets/img/buttons/button-yellow.png\" />}\r\n                  </a>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container ha-header-content shadow d-md-none d-block\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div>\r\n            <img className=\"logo\" src={LogoImg} alt=\"HeroArena Logo\" />\r\n          </div>\r\n          <div className=\"d-flex\">\r\n            <div className=\"items\">\r\n              <div\r\n                style={{ color: \"#000\" }}\r\n                onClick={toggleDrawer(\"right\", true)}\r\n              >\r\n                <MenuOutlined />\r\n              </div>\r\n              {/* <SwipeableDrawer\r\n                anchor=\"right\"\r\n                open={state[\"right\"]}\r\n                onOpen={toggleDrawer(\"right\", true)}\r\n                onClose={toggleDrawer(\"right\", false)}\r\n              >\r\n                {list(\"right\")}\r\n              </SwipeableDrawer> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n"],"sourceRoot":""}