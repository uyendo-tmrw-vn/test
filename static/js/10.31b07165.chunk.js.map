{"version":3,"sources":["assets/img/button/about-us.png","pages/HomePage/Sections/AboutUs/index.tsx"],"names":["timelineVideo","gsap","timeline","AboutUs","useDispatch","isPlayingVideo","useSelector","state","counter","useState","refYoutube","isFrameReady","useRef","useEffect","setTimeout","target","playVideo","ScrollTrigger","create","id","trigger","animation","endTrigger","start","end","onEnter","_handleOnStart","onLeave","_handleOnLeave","onEnterBack","_handleOnStartBack","onLeaveBack","_handleOnLeaveBack","setVolume","className","onClick","src","AboutUsBtnImg","alt"],"mappings":"mMAAe,MAA0B,qC,+BCWrCA,EAAgBC,IAAKC,WACV,SAASC,EAAT,GAA4C,eACxCC,cAAjB,IACMC,EAAiBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQH,cAAzB,IACnC,EAAoCI,mBAAS,MAA7C,mBAAOC,EAAP,KACA,GADA,KACgDD,mBAAS,OAAzD,mBACA,GADA,UACwCA,oBAAS,IAAjD,mBAAOE,EAAP,UAEgBC,mBAChBC,qBAAU,WAGT,GAAE,CAACH,IACJG,qBAAU,WAQT,GAAE,CAACR,IACJQ,qBAAU,WACJF,GAEFG,YAAW,WACTJ,EAAWK,OAAOC,WAEnB,GAAE,IAEN,GAAE,CAACL,IAaJM,IAAcC,OAAO,CACnBC,GAAI,gBACJC,QAAS,YACTC,UAAWrB,EACXsB,WAAY,4BAEZC,MAAO,UACPC,IAAK,SAGLC,QAAS,kBAAMC,GAAN,EACTC,QAAS,kBAAMC,GAAN,EACTC,YAAa,kBAAMC,GAAN,EACbC,YAAa,kBAAMC,GAAN,IAGf,IAAMN,EAAc,iDAAG,wFACjBhB,GACFA,EAAWK,OAAOkB,UAAU,IAFT,2CAAH,qDAKdH,EAAqB,WACrBpB,GACFA,EAAWK,OAAOkB,UAAU,GAE/B,EACKL,EAAiB,WACjBlB,GACFA,EAAWK,OAAOkB,UAAU,GAE/B,EACKD,EAAqB,WACrBtB,GACFA,EAAWK,OAAOkB,UAAU,GAE/B,EA4BD,OACE,qBAAKC,UAAU,oCAAoCf,GAAG,WAAtD,SACE,qBAAKe,UAAU,YAAf,SACE,sBAAKA,UAAU,+DAAf,UAEE,qBACEA,UAAU,cACVC,QAAS,yBAAMzB,QAAN,IAAMA,OAAN,EAAMA,EAAYK,OAAOC,WAAzB,EAFX,SAIE,qBAAKkB,UAAU,aAAaE,IAAKC,EAAeC,IAAI,eAGtD,qBACEJ,UAAU,gDACV,WAAS,OAFX,2YAS0D,OAG1D,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,iCAsB1B,C","file":"static/js/10.31b07165.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/about-us.ac296df1.png\";","import React, { ReactElement, useEffect, useRef, useState } from \"react\";\r\nimport BackgroundImg from \"assets/img/section-about-us.jpg\";\r\nimport AboutUsBtnImg from \"assets/img/button/about-us.png\";\r\nimport YouTube, { Options } from \"react-youtube\";\r\nimport { gsap, CSSPlugin } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\nimport { setPlayingVideo } from \"redux/slices/counter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\ninterface Props { }\r\n\r\nvar timelineVideo = gsap.timeline();\r\nexport default function AboutUs({ }: Props): ReactElement {\r\n  const dispatch = useDispatch();\r\n  const isPlayingVideo = useSelector((state) => state.counter.isPlayingVideo);\r\n  const [refYoutube, setRefYoutube] = useState(null);\r\n  const [refYoutubeBackup, setRefYoutubeBackup] = useState(null);\r\n  const [isFrameReady, setIsFrameReady] = useState(false);\r\n\r\n  const testRef = useRef();\r\n  useEffect(() => {\r\n    // console.log(refYoutube);\r\n    // refYoutube?.target.playVideo();\r\n  }, [refYoutube]);\r\n  useEffect(() => {\r\n    // if (refYoutube) {\r\n    //   if (isPlayingVideo) {\r\n    //     refYoutube.target.playVideo();\r\n    //   } else {\r\n    //     refYoutube.target.pauseVideo();\r\n    //   }\r\n    // }\r\n  }, [isPlayingVideo]);\r\n  useEffect(() => {\r\n    if (isFrameReady) {\r\n      // console.log(\"loaded from react\", refYoutube);\r\n      setTimeout(() => {\r\n        refYoutube.target.playVideo();\r\n        // console.log(\"loaded from sto\");\r\n      }, 2000);\r\n    }\r\n  }, [isFrameReady]);\r\n  const youtubeOptions: Options = {\r\n    height: \"390\",\r\n    width: \"640\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      playlist: \"FjrvOPo4-8g\",\r\n      autoplay: 1,\r\n      loop: 1,\r\n    },\r\n  };\r\n\r\n  // TIME LINE GSAP\r\n  ScrollTrigger.create({\r\n    id: \"trigger-video\",\r\n    trigger: \".about-us\",\r\n    animation: timelineVideo,\r\n    endTrigger: \".section-character-system\",\r\n    // pin: true,\r\n    start: \"top 20%\",\r\n    end: \"top 5%\", // beyond start\r\n    // scrub: 1, // smooth scrubbing, takes 1 second to \"catch up\" to the scrollbar\r\n    // markers: true,\r\n    onEnter: () => _handleOnStart(),\r\n    onLeave: () => _handleOnLeave(),\r\n    onEnterBack: () => _handleOnStartBack(),\r\n    onLeaveBack: () => _handleOnLeaveBack(),\r\n  });\r\n\r\n  const _handleOnStart = async () => {\r\n    if (refYoutube) {\r\n      refYoutube.target.setVolume(80);\r\n    }\r\n  };\r\n  const _handleOnStartBack = () => {\r\n    if (refYoutube) {\r\n      refYoutube.target.setVolume(80);\r\n    }\r\n  };\r\n  const _handleOnLeave = () => {\r\n    if (refYoutube) {\r\n      refYoutube.target.setVolume(32);\r\n    }\r\n  };\r\n  const _handleOnLeaveBack = () => {\r\n    if (refYoutube) {\r\n      refYoutube.target.setVolume(32);\r\n    }\r\n  };\r\n\r\n  const _onReady = (e) => {\r\n    setRefYoutube(e);\r\n    setRefYoutubeBackup(e);\r\n    setIsFrameReady(true);\r\n    // console.log(\"ready\");\r\n    // ScrollTrigger.refresh();\r\n  };\r\n  const _onPause = (e) => {\r\n    // dispatch(setPlayingVideo(false));\r\n    // setRefYoutube(null);\r\n    // ScrollTrigger.getById(\"trigger1\").kill(true);\r\n    // ScrollTrigger.getById(\"trigger1\").kill(true);\r\n    // let Alltrigger = ScrollTrigger.getAll();\r\n    // for (let i = 0; i < Alltrigger.length; i++) {\r\n    //   console.log(Alltrigger[i]);\r\n    //   Alltrigger[3].kill(true);\r\n    // }\r\n    // ScrollTrigger.getById(\"trigger-video\").kill(true);\r\n    console.log(\"paused\");\r\n    // ScrollTrigger.getById(\"trigger-video\").disable(false);\r\n  };\r\n  const _onPlay = (e) => {\r\n    // dispatch(setPlayingVideo(true));\r\n    // console.log(\"123123 play\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"section section-about-us about-us\" id=\"about-us\">\r\n      <div className=\"container\">\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n          {/* about us btn */}\r\n          <div\r\n            className=\"imgBtn my-3\"\r\n            onClick={() => refYoutube?.target.playVideo()}\r\n          >\r\n            <img className=\"imgBtn-btn\" src={AboutUsBtnImg} alt=\"about-us\" />\r\n          </div>\r\n          {/* description */}\r\n          <h6\r\n            className=\"my-4 text-center text-description color-white\"\r\n            data-aos=\"fade\"\r\n          >\r\n            Hero Arena is a Metaverse RPG Game built on blockchain technology.\r\n            We have inspiration from the Dota2 Game. It is a futuristic world\r\n            with 5 different factions, each with their own strengths and\r\n            weaknesses. Players can recruit heroes which then can be used to\r\n            progress in the campaign mode and fight against the enemies. In the\r\n            combat arena players can earn profit from your enemies.{\" \"}\r\n          </h6>\r\n          {/* video */}\r\n          <div className=\"my-3 px-1 px-md-5 video-frame\">\r\n            <div className=\"iframe-video-wrapper\">\r\n              {/* <YouTube\r\n                ref={testRef}\r\n                videoId=\"FjrvOPo4-8g\" // defaults -> null\r\n                id=\"FjrvOPo4-8g\"\r\n                // defaults -> null\r\n                className=\"iframe-video\" // defaults -> null\r\n                // containerClassName={string}       // defaults -> ''\r\n                opts={youtubeOptions} // defaults -> {}\r\n                onReady={_onReady}\r\n                onPause={_onPause}\r\n                onPlay={_onPlay}\r\n              /> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"section-about-us-bg-wrapper\">\r\n        <img width=\"100%\" src={BackgroundImg} alt=\"Hero Arena\" />\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}